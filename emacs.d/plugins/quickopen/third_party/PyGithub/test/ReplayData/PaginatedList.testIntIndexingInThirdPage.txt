GET /repos/openframeworks/openFrameworks/issues?page=2 {'Authorization': 'Basic login_and_password_removed'} null
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4926'), ('content-length', '49679'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=3>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="prev"'), ('etag', '"8c30dcf27290220465cd1ecce8fa943a"'), ('date', 'Tue, 29 May 2012 19:36:58 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2012-04-30T19:43:55Z","body":"On 'update', PG should respect existing custom include paths, source files, linker flags and project options (such as optimization settings).\r\n\r\nOR\r\n\r\nXcode project should read and respect `OTHER_LDFLAGS` and `HEADER_SEARCH_PATHS`, and add `OTHER_CFLAGS` from Project.xcconfig; projectGenerator should leave these settings alone unless it figures out they need to be adjusted (this is probably going to be difficult).","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1217","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1217,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1217","assignee":null,"title":"projectGenerator update doesn't respect existing project settings","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator","color":"444444"}],"closed_at":null,"created_at":"2012-04-24T21:03:44Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366},"id":4269431,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-02T10:19:07Z","body":"Since I don't want to derail #484 further, this issue deals with the implementation of a deprecation mechanism.\r\nBased on [this](http://stackoverflow.com/questions/295120/c-mark-as-deprecated), I made an OFDEPRECATED preproc macro.\r\n\r\nQUESTION: How do I correctly #ifdef for MacOS/XCode4/llvm?\r\n\r\nCould people test this on different platforms? On linux this works. \r\n\r\n\t\ttestApp.h:\r\n\r\n\t\t#pragma once\r\n\r\n\t\t#ifdef __GNUC__\r\n\t\t// maybe  __clang__ for checking against llvm/xcode4?\r\n\t\t#define OFDEPRECATED(message, func) func __attribute__ ((deprecated(message)))\r\n\t\t#elif defined(_MSC_VER)\r\n\t\t#define OFDEPRECATED(message, func) __declspec(deprecated(message)) func\r\n\t\t#else\r\n\t\t#pragma message(\"WARNING: You need to implement DEPRECATED for this compiler\")\r\n\t\t#define OFDEPRECATED(message, func) func\r\n\t\t#endif\r\n\r\n\t\tand \r\n\r\n\t\t\t\tvoid dragEvent(ofDragInfo dragInfo);\r\n\t\t\t\tvoid gotMessage(ofMessage msg);\r\n\t\t\r\n\t\t\t\tOFDEPRECATED(\"This is an old function, don't use!\", void deprecatedFunction(void));\r\n\t\t\t\tOFDEPRECATED(\"Obsolete type, use T2!\", typedef int T1);\r\n\t\t\t\ttypedef int T2;\r\n\t\t\t\tOFDEPRECATED(\"This is an old variable, don't use!\", int oldvar3);\r\n\t\t\t\t//This breaks a bit cause it's used in the constructor of testApp, so always triggers.\r\n\r\n\t\t};\r\n\t\tOFDEPRECATED(\"old class!\", class oldClass {\r\n\t\t\tpublic:\r\n\t\t\t\toldClass();\r\n\t\t\t\tvirtual ~oldClass();\r\n\t\t});\r\n\r\n\t\ttestApp.cpp:\r\n\r\n\t\tvoid testApp::setup(){\r\n\t\t\tOFDEPRECATED(\"old string. Don't use\", string oldstring);\r\n\t\t\t// Uncomment these to trigger deprecation warnings\r\n\t\t//\tdeprecatedFunction();\r\n\t\t//\tT1 t1object =  5;\r\n\t\t//\toldstring = \"bla\";\r\n\t\t//\toldvar3=5;\r\n\t\t//\toldClass bla;\r\n\t\t}\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1216","comments":11,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1216,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1216","assignee":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"title":"Implement deprecation mechanism","labels":[],"closed_at":null,"created_at":"2012-04-24T21:03:39Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"id":4269429,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-30T19:43:14Z","body":"When using PG's 'update' functionality on apps are in paths with non-standard depths (in my case, `oF/apps/dir/subdir/subsubdir`) the OF_PATH and #include directives in the resulting Project.xcconfig don't match, which means oF projects won't compile:\r\n\r\n~~~~\r\n//THE PATH TO THE ROOT OF OUR OF PATH RELATIVE TO THIS PROJECT.\r\n//THIS NEEDS TO BE DEFINED BEFORE CoreOF.xcconfig IS INCLUDED\r\nOF_PATH = ../../../..\r\n\r\n//THIS HAS ALL THE HEADER AND LIBS FOR OF CORE\r\n#include \"../../../../../libs/openFrameworksCompiled/project/osx/CoreOF.xcconfig\"\r\n~~~~\r\n\r\nNote extra `../` in the `#include` path.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1215","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1215,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1215","assignee":null,"title":"projectGenerator sets incorrect path in Project.xcconfig","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator","color":"444444"}],"closed_at":null,"created_at":"2012-04-24T20:59:57Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366},"id":4269359,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-22T23:56:33Z","body":"i'm teaching a workshop right now and i feel like it's ridiculous that i need to explain pointers just to access video :)\r\n\r\nlet's add this!","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1202","comments":3,"milestone":null,"number":1202,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1202","assignee":null,"title":"ofVideoPlayer etc needs ofColor access","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-video","name":"section-video","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-22T18:42:58Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":4231092,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-29T17:34:24Z","body":"DO NOT PULL YET!\r\n\r\nHey all\r\n\r\nHere's the 'off-axis camera' setup we worked on at ScreenLab last weekend.\r\nIt allows you to:\r\n\r\n* Set lens offset on a camera\r\n* Calculate the camera parameters based on a 'view portal' defined by 3 points (top left, bottom left, bottom right)\r\n\r\nCurrently the changes involve editing ofBaseRenderer (and therefore all other renderers) to support lensOffset parameter (default 0,0). We could remove this since ofCamera doesn't actually use ofSetupScreenPerspective\r\n\r\nSo let's have a quick chat about what needs chaning to make this core friendly and then probably pull after 0071 release?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1201","comments":9,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1201,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1201","assignee":null,"title":"Feature provocation pull request:  ofCamera lens offset","labels":[],"closed_at":null,"created_at":"2012-04-22T15:55:29Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","id":328294},"id":4230131,"pull_request":{"html_url":"https://github.com/openframeworks/openFrameworks/pull/1201","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1201.patch","diff_url":"https://github.com/openframeworks/openFrameworks/pull/1201.diff"}},{"updated_at":"2012-05-14T01:22:17Z","body":"I'm investigating the way to draw bezier curves / nurbs etc. with shaders, here is a list a links and information I found that can improve render times with OF. Any way I must admit I'm new to openGL & shaders so maybe someone can take this to implement maybe an add-on or maybe to added to the core.\r\n\r\n**Resolution Independent Curve Rendering using Programmable Graphics Hardware**\r\nhttp://research.microsoft.com/en-us/um/people/cloop/loopblinn05.pdf\r\n\r\n**Resolution independent GPU accelerated Curve & Font rendering**\r\n**GPU based Resolution Independent Font & Curve Rendering – initial Release**\r\nhttp://jausoft.com/blog/2011/04/01/resolution-independent-gpu-accelerated-curve-font-rendering/\r\nhttp://ramisantina.com/blog/?p=73\r\nhttp://vimeo.com/21810192\r\nhttp://jogamp.org/doc/gpunurbs2011/p70-santina.pdf\r\n\r\n**Curvy blues**\r\nhttp://www.mdk.org.pl/2007/10/27/curvy-blues\r\n\r\n**Vector drawing: OpenGL shaders and cairo & vector hardware tessellation**\r\nhttp://www.mdk.org.pl/2007/8/6/vector-drawing-opengl-shaders-and-cairo\r\n\r\n**ShivaVG & Random Access Rendering of Animated Vector Graphics**\r\nhttp://ivanleben.blogspot.com.es/2007/07/shivavg-open-source-ansi-c-openvg.html\r\nhttp://www.youtube.com/watch?v=mD8X-e5-sY4\r\nhttp://www.youtube.com/watch?v=U4USCfwORUg\r\nhttp://andrejas-atelier.com/ivan/IvanLebenHonsThesis.pdf\r\n\r\n**RAVG**\r\nhttp://research.microsoft.com/en-us/um/people/hoppe/proj/ravg/\r\n\r\n**NV Path Rendering Videos (seams only with nvidia)**\r\nhttp://developer.nvidia.com/nv-path-rendering-videos\r\n\r\n**Vector drawing: OpenGL polygon tessellation**\r\nhttp://www.mdk.org.pl/2007/8/16/vector-drawing-opengl-polygon-tessellation\r\nhttp://zrusin.blogspot.com.es/2006/07/hardware-accelerated-polygon-rendering.html\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1190","comments":8,"milestone":null,"number":1190,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1190","assignee":null,"title":"Bezier Shaders & Vector openGL rendering","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-2D","name":"section-2D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-20T09:23:00Z","state":"open","user":{"url":"https://api.github.com/users/microbians","avatar_url":"https://secure.gravatar.com/avatar/98c91e60903b83c0a022ee70cca9ca21?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"98c91e60903b83c0a022ee70cca9ca21","login":"microbians","id":1662136},"id":4207350,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-16T09:41:20Z","body":"ofSetCurveResolution is not changing the resolution using ofBezier nor ofBezierVertex (tested with ofScale is more easy to see the bug)\r\n\r\n    ofFill();\r\n    ofSetHexColor(0xFF9933);\r\n    ofBeginShape();\r\n    ofVertex(x0,y0);\r\n    ofBezierVertex(x1,y1,x2,y2,x3,y3);\r\n    ofEndShape();\r\n\r\nall works fine when using ofPath directly:\r\n\r\n    ofPath curve;\r\n    curve.setFillHexColor(0xFF000);\r\n    curve.setCurveResolution(120);\r\n    curve.moveTo(x0, y0);\r\n    curve.bezierTo(x1,y1,x2,y2,x3,y3);\r\n    curve.draw();\r\n\r\nmore: http://forum.openframeworks.cc/index.php/topic,9596.0.html","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1189","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1189,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1189","assignee":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"title":"ofSetCurveResolution + ofBezierVertex bug","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-04-20T08:51:51Z","state":"open","user":{"url":"https://api.github.com/users/microbians","avatar_url":"https://secure.gravatar.com/avatar/98c91e60903b83c0a022ee70cca9ca21?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"98c91e60903b83c0a022ee70cca9ca21","login":"microbians","id":1662136},"id":4206982,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-01T04:10:23Z","body":"If you set up an ofFbo as follows...\r\n\r\n```cpp\r\n            ofFbo::Settings s;\r\n            s.width = 400;\r\n            s.height = 400;\r\n            s.textureTarget = GL_TEXTURE_2D;\r\n            s.useDepth = true;\r\n            s.depthAsTexture = true;\r\n            s.dethInternalFormat = GL_DEPTH_COMPONENT24;\r\n```\r\n\r\n...then the colour texture's dimensions are set to be the next POTs up but the depth texture's dimensions don't seem to be. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1186","comments":2,"milestone":null,"number":1186,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1186","assignee":null,"title":"ofFbo depthBufferTex can be inconsistent with colour texture","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-18T15:08:32Z","state":"open","user":{"url":"https://api.github.com/users/neilmendoza","avatar_url":"https://secure.gravatar.com/avatar/3e46b12547e7bac19eb982bc512b19c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3e46b12547e7bac19eb982bc512b19c4","login":"neilmendoza","id":818571},"id":4174070,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-16T09:44:27Z","body":"As mentioned here: http://forum.openframeworks.cc/index.php?topic=9107.0\r\nOpenGLES2 not working. It is always falls back to ES1. I tested it only on iPad2 with iOS 5.0.1.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1178","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1178,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1178","assignee":{"url":"https://api.github.com/users/julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","id":331382},"title":"OpenGLES2 not working","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-04-16T11:19:36Z","state":"open","user":{"url":"https://api.github.com/users/erinnovations","avatar_url":"https://secure.gravatar.com/avatar/29639bbeb3afdde8fb3c7e273e5e43c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"29639bbeb3afdde8fb3c7e273e5e43c6","login":"erinnovations","id":253455},"id":4132608,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-14T13:45:55Z","body":"in ofTexture::loadData we are doing:\r\n\r\n\r\n\t//------------------------ likely, we are uploading continuous data\r\n\tGLint prevAlignment;\r\n\tglGetIntegerv(GL_UNPACK_ALIGNMENT, &prevAlignment);\r\n\tglPixelStorei(GL_UNPACK_ALIGNMENT, 1);\r\n\r\nany reason for this? leaving the default works too. i've been working with a huge video and the transfer rates on some cards were super slow with ofTexture::loadData. even glDrawPixels was faster, i've finally used pbo's but later looking at ofTexture discovered this lines and i suspect that it could be the reason for loadData being slower, haven't tested it yet though.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1175","comments":0,"milestone":null,"number":1175,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1175","assignee":null,"title":"GL_UNPACK_ALIGNMENT 1 in ofTexture","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-14T13:45:42Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"id":4117762,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-16T09:39:22Z","body":"one returns the result (dot) the other performs in place (cross), i.e. overrides the contents\r\nThe two definitions are inconsistent\r\npropose rename `ofVec3f::dot` to become `ofVec3f::getDotted` in line with `ofVec3f::getCrossed`","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1174","comments":9,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1174,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1174","assignee":null,"title":"bug : inconsistent API for ofVec3f::dot and ofVec3f::cross","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-13T17:09:38Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","id":328294},"id":4108582,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-14T04:20:36Z","body":"If you pass a string containing non-ascii characters to ofToHex(), the non-ascii characters (with character codes above 127) will be output as ffffxxxx (it depends on the exact character value and the size of the int type on the platform you are compiling for).\r\nThe problem is due to an incorrect cast in the ostringstream operation inside the loop.\r\nInstead of directly casting the (signed) char from the input character to an unsigned int, the input character must first be cast to an unsigned char.\r\nIn other words, instead of:\r\n```   out << setfill('0') << setw(2) << hex << (unsigned int) value[i];```\r\nit should be:\r\n```   out << setfill('0') << setw(2) << hex << (unsigned int) ((unsigned char)value[i]);```\r\nor maybe even:\r\n```   out << setfill('0') << setw(2) << hex << static_cast<unsigned int>(static_cast<unsigned char>(value[i]));```\r\nif you prefer C++ style casts over C style casts. :)\r\n\r\nHTH\r\n/Jesper","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1173","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1173,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1173","assignee":null,"title":"ofToHex(string) is wrong for non-ascii input","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize","color":"65a300"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-13T14:42:30Z","state":"open","user":{"url":"https://api.github.com/users/pappis","avatar_url":"https://secure.gravatar.com/avatar/fbf3d56c96cf5b891056530066549692?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"fbf3d56c96cf5b891056530066549692","login":"pappis","id":1640543},"id":4104336,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-12T10:09:42Z","body":"if I call ofBeginSaveScreenAsPDF using ofEasyCam or the ofCamera, the pdf doesn't have the perspective of the camera. There's a parameter b3d to ofBeginSaveScreenAsPDF which I interpret to be \"render taking into account 3d transforms\", but it doesn't seem to have any effect.\r\n\r\nmore on the forum\r\n\r\nhttp://forum.openframeworks.cc/index.php/topic,9542.0.html","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1171","comments":0,"milestone":null,"number":1171,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1171","assignee":null,"title":"ofBeginSaveScreenAsPDF ignores 3d transformations","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-12T10:09:42Z","state":"open","user":{"url":"https://api.github.com/users/jesusgollonet","avatar_url":"https://secure.gravatar.com/avatar/5008d5295e9bc2636313c7b50ed5981d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"5008d5295e9bc2636313c7b50ed5981d","login":"jesusgollonet","id":31100},"id":4081188,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-13T14:54:18Z","body":"if I have `ofEvent<bool> boolEvent` and i try to call `ofNotifyEvent( boolEvent, true )` i get a `no matching function` error as the compiler cannot coerce `true` to a `bool &`.\r\n\r\nto solve this, instead of this:\r\n\r\n~~~~\r\nofEvent<bool> boolEvent;\r\n...\r\nofNotifyEvent( boolEvent, true );\r\n~~~~\r\n\r\ni need to write this:\r\n\r\n~~~~\r\nofEvent<bool> boolEvent;\r\n...\r\nbool myBool = true;\r\nofNotifyEvent( boolEvent, myBool );\r\n~~~~\r\n\r\nthis is kind of annoying.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1167","comments":2,"milestone":null,"number":1167,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1167","assignee":null,"title":"ofNotifyEvent( boolEvent, true ) fails to compile","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-04-11T12:03:34Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366},"id":4063456,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-11T13:21:33Z","body":"It's currently not possible to have an event without arguments\r\n\r\n`ofEvent testEvent;` -- fails to compile\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1166","comments":2,"milestone":null,"number":1166,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1166","assignee":null,"title":"ofEvent lacks simple, argument-free use case","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-04-11T12:00:19Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366},"id":4063417,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-21T15:41:01Z","body":"It's currently not possible to write `ofLogError( \"serial\", \"error %i connecting to serial\", serialError )`. \r\n\r\nThere should be `ofLogError( string module, string format, ... )` methods as with normal ofLog.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1165","comments":6,"milestone":null,"number":1165,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1165","assignee":null,"title":"ofLogError, ofLogWarning lack format, ... args","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-04-11T11:56:33Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366},"id":4063366,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-10T16:47:19Z","body":"change `allocate(_w, _h, OF_IMAGE_COLOR);` to `allocate(_w, _h, OF_IMAGE_COLOR_ALPHA);` (via reza on irc)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1152","comments":4,"milestone":null,"number":1152,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1152","assignee":null,"title":"grabScreen in ofImage fails on Android","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-04-09T17:15:21Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":4032047,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-29T14:46:40Z","body":"the module name is no longer printed if it's coming from OF itself.\r\n\r\ninstead of the constant name, a human-readable string is printed.\r\n\r\nexample output from project generator: http://pastebin.com/raw.php?i=0dp938Jx","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1151","comments":6,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1151,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1151","assignee":null,"title":"shorten + simplify ofLog output","labels":[],"closed_at":null,"created_at":"2012-04-08T21:13:14Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":4023525,"pull_request":{"html_url":"https://github.com/openframeworks/openFrameworks/pull/1151","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1151.patch","diff_url":"https://github.com/openframeworks/openFrameworks/pull/1151.diff"}},{"updated_at":"2012-04-17T14:47:36Z","body":"\r\nWorking on the project generator, which has a fair amount of logging, I'm concerned about how much space we loose on each line: \r\n\r\n    OF: OF_LOG_NOTICE:\r\n\r\nit's about 15-20 characters or so, pretty significant where each line is 80, so alot more wrapping happens then I'd like, making the results less cleaner or organized. \r\n\r\nI propose we alter \r\n\r\n    string ofGetLogLevelName(ofLogLevel level){\r\n        switch(level){\r\n            case OF_LOG_VERBOSE:\r\n                return \"OF_LOG_VERBOSE\";\r\n                break;\r\n            case OF_LOG_NOTICE:\r\n                return \"OF_LOG_NOTICE\";\r\n                break;\r\n            case OF_LOG_WARNING:\r\n                return \"OF_LOG_WARNING\";\r\n                break;\r\n            case OF_LOG_ERROR:\r\n                return \"OF_LOG_ERROR\";\r\n                break;\r\n            case OF_LOG_FATAL_ERROR:\r\n                return \"OF_LOG_FATAL_ERROR\";\r\n                break;\r\n            case OF_LOG_SILENT:\r\n                return \"OF_LOG_SILENT\";\r\n                break;\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\nso that we can have something like : \r\n\r\n    (of:notice) \r\n    (of:verbose) \r\n    (of:error) \r\n\r\nor something smaller and if we loose the all caps, maybe less threatening :)\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1150","comments":4,"milestone":null,"number":1150,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1150","assignee":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"title":"propose shortening ofLog console message length","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize","color":"65a300"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-04-08T20:32:49Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","id":142897},"id":4023305,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-07T15:00:32Z","body":"Hey all\r\n\r\nA few sections of the repo need some love to put them in line with the project generator:\r\n\r\n1. Readme's\r\n2. Rogue old project generators\r\n3. Document complementing tools\r\n\r\n# Readme\r\n\r\nThe readme's in the root of the repo need some love\r\nnone of them mention project generator \r\n\r\ni feel like each should be a description of how to get to a working project generator on each of the respective platforms\r\n\r\nalso note:\r\n*  .vs2010 is missing\r\n* readme.txt repeats information from the other readme's (i.e. it's a list of platform specific instructions)\r\ni think this should be perhaps a little description of oF and a few tips on how to get started\r\n\r\n# Rogue old 'project generators' / documenting complementary tools for project generator\r\n\r\nHere's things I can find in the repo which don't make sense to me at the moment:\r\n\r\n* `openFrameworks\\scripts\\????\\compileAllExamples.bat`\r\n** is this supposed to be run (optionally) after the project generator?\r\n** why is the project template within this folder?\r\n* `openFrameworks\\scripts\\????\\createProjects.py` \r\n** if this isn't supposed to be used anymore, lets delete it immediately (we can always recover in emergencies)\r\n\r\nand the 'other' folder in the root.. perhaps never took off?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1146","comments":0,"milestone":null,"number":1146,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1146","assignee":null,"title":"Document Project Generator / clean out old tools","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/documentation","name":"documentation","color":"cccc29"}],"closed_at":null,"created_at":"2012-04-07T14:43:53Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","id":328294},"id":4015514,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-07T19:49:31Z","body":"When attempting to render a mesh to a PDF the ofCairoRender does not output a filled mesh, thus the PDF output looks empty. \r\n\r\nIf you open the file in illustrator you'll see the paths, there but with no stroke or fill. \r\n\r\nWhen I dug into the issue a bit further I realized that Cairo isn't capable of rendering shapes with per vertex colors easily...\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1145","comments":3,"milestone":null,"number":1145,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1145","assignee":null,"title":"ofCairoRenderer ofMesh doesn't render properly to PDF","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-04-06T22:02:01Z","state":"open","user":{"url":"https://api.github.com/users/rezaali","avatar_url":"https://secure.gravatar.com/avatar/548374013b9c6e50ebbd2294e12d4f31?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"548374013b9c6e50ebbd2294e12d4f31","login":"rezaali","id":555207},"id":4010494,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-01T04:21:01Z","body":"When using the ofColor subtraction operator, negative results are clamped to positive values instead of 0. Values are circulating between 0 and 255, which could be useful for hue in HSV but in most cases (R, G, B..) is not what I would expect.\r\n\r\n    ofColor a(10, 40, 80);\r\n    ofColor b(20, 5, 30);\r\n    ofColor c = (a-b); // I get: (246, 45, 50), I would expect: (0, 45, 50)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1144","comments":9,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1144,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1144","assignee":null,"title":"ofColor subtraction and negative values","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-04-06T07:56:44Z","state":"open","user":{"url":"https://api.github.com/users/jembezmamy","avatar_url":"https://secure.gravatar.com/avatar/69a23dc9914cb6bc3202c50e15eabba0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"69a23dc9914cb6bc3202c50e15eabba0","login":"jembezmamy","id":720354},"id":4001148,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-04T12:07:24Z","body":"When using the dragEvent ofDragInfo I always get the following error message:\r\n\r\nwarning: Could not find object file \"/Users/theo/Documents/CODE/__OPENFRAMEWORKS/gitOF/openFrameworks/apps/devApps/macDragDropExample/buildGlutFrameworkHackedWindowLevel10.4/libForeground.a(macx_foreground.o)\" - no debug information available for \"/Users/mcast/Code/GLUT-ToPost/macx_foreground.m\".\r\n\r\nIt doesn't seem to hurt my code but is a bit annoying, especially early on when I wasn't sure if it had anything to do with compile failings. Not a big issue obviously, but it might confuse some other newbie's also.\r\n\r\n(OF 0.07 - Xcode 4.2.1 - OS X 10.7.3 - macbook pro) ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1138","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1138,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1138","assignee":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"title":"benign error message","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS","color":"2a8296"}],"closed_at":null,"created_at":"2012-04-04T11:05:57Z","state":"open","user":{"url":"https://api.github.com/users/davideo71","avatar_url":"https://secure.gravatar.com/avatar/42c3c1acbdb4a998d8096b49745219cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"42c3c1acbdb4a998d8096b49745219cd","login":"davideo71","id":1611385},"id":3968742,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-03T17:37:10Z","body":"theo's #1133 made me think about ways that i use noise regularly that might also be abstracted.\r\n\r\ni would also like to see versions of noise that return multidimensional results. normally i do something like:\r\n\r\n\tofVec2 a(ofSignedNoise(t, 0), ofSignedNoise(0, t)); // 1D -> 2D\r\n\tofVec2 b(ofSignedNoise(x, 0), ofSignedNoise(0, y)); // 2D -> 2D\r\n\tofVec3 c(ofSignedNoise(t, 0, 0), ofSignedNoise(0, t, 0), ofSignedNoise(0, 0, t)); // 1D -> 3D\r\n\tofVec3 d(ofSignedNoise(x, 0, 0), ofSignedNoise(0, y, 0), ofSignedNoise(0, 0, (x + y) / 2)); // 2D -> 3D\r\n\r\nand it would be good to spend some time making sure these are really good ways of doing it, then implement them inside some functions like `ofSignedNoise2()` and `ofSignedNoise3()` (for example).","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1134","comments":2,"milestone":null,"number":1134,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1134","assignee":null,"title":"multidimensional noise output","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-04-01T16:44:55Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":3917377,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-01T17:48:12Z","body":"ie: the equivalent of doing \r\n\r\nfloat rate = 0.02 + ofNoise(ofGetElapsedTimeF() * 0.02, 100.0) * 0.015;\r\nfloat value = ofSignedNoise( rate, x, y ); \r\n\r\nas one function. \r\n\r\nalso see kyle's #1134 for other noise utils. \r\n\r\nI find myself needing this quite often for more natural random motion where the rate of change is variable. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1133","comments":0,"milestone":null,"number":1133,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1133","assignee":null,"title":"ofNoise and ofSignedNoise with 2nd order control for rate.","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-04-01T15:45:11Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":3917018,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}}]

GET /repos/openframeworks/openFrameworks/issues?page=3 {'Authorization': 'Basic login_and_password_removed'} null
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4925'), ('content-length', '55518'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=4>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=2>; rel="prev"'), ('etag', '"b3b3a8bd17d4ed7557040a218c1db573"'), ('date', 'Tue, 29 May 2012 19:36:59 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"milestone":null,"state":"open","user":{"gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","url":"https://api.github.com/users/ofTheo","login":"ofTheo","id":144000,"avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofStringUtils:: feature discussion","html_url":"https://github.com/openframeworks/openFrameworks/issues/1132","comments":6,"assignee":null,"updated_at":"2012-04-02T02:05:52Z","body":"This is a feature discussion issue for what string features we should add to of.\r\nofZach mentioned some regexp ones from P5 match matchAll\r\nWould be great to get some eyes on this.\r\n\r\nOne approach would be a static class or namespace.\r\nThe idea would be we could include a variety of handy functions that would be useful for people not wanting to get into regexp\r\n\r\n\tofString::contains(str, \"apple\")       //returns bool\r\n\tofString::starts(str, \"The\")           //returns bool\r\n\tofString::ends(str, \".\")               //returns bool\r\n\tofString::count(str, \"apples\")         //count how many times apples appears in the \r\n\tofString::join(myVectorStr, \", \");     //this is currently ofJoinString\r\n\tofString::split(someText, \".\");        //this is currently ofSplitString\r\n\tofString::split(someHtml, \"<\", \">\");   //this is the same but returns a vector of things between the start and end delims\r\n\tofString::limit(someText, 200);        //limit the text to 200 characters. optional arg to add ... to the end.\r\n\r\nQuestions:\r\n- Should we mirror P5 with match and matchAll or should we indicate that regexp is required? ie regexMatch regexMatchAll ?\r\n- Other string utils we could add?\r\n- Should it be ofStringUtils:: or ofString:: ?\r\n- Something to do a split and then return a vector of float int etc?","number":1132,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1132","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"}],"id":3911629,"closed_at":null,"created_at":"2012-03-31T17:52:48Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","url":"https://api.github.com/users/ofTheo","login":"ofTheo","id":144000,"avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofTTF feature discussion","html_url":"https://github.com/openframeworks/openFrameworks/issues/1131","comments":25,"assignee":null,"updated_at":"2012-05-27T17:40:30Z","body":"This is a feature discussion issue for what should be added / changed to ofTTF.\r\nWould be great to get some eyes on this from @vtron @ofzach @arturoc and anyone with thoughts on the matter.\r\n\r\nTextAreas:\r\n- Fit text to a box\r\n- Handle overflow ( ie either truncate or resize box height )\r\n- non ragged options\r\n- could textAreas work with both ofTTF and ofDrawBitmapString ? abstract text formatting?\r\n\r\nAlignment:\r\n- Left align a string\r\n- Right align\r\n- Center\r\n- Top align \r\n- Base align \r\n\r\nSpacing:\r\n- Kerning\r\n- Leading / line height\r\n\r\nLoading:\r\n- Allow for loading a font up to a max size for drawing at different sizes. \r\n- Allow for selection and loading of specific sizes within one object. ie: myFont.setCurrentSize(12); \r\n- Font family's / sets ? Bold, Italic etc? \r\n\r\nDrawing:\r\n- Allow for drawing font at different sizes. Scale font as needed. \r\n\r\nFormatting:\r\n- Could we somehow allow a string to have different colors, sizes. Right now it is a pain to change colors or sizes. \r\n- would this be replicating basic html or another approach? maybe better as an addon?\r\n\r\nInfo:\r\n- Ability to get the x and y position of the nth character in the string? useful maybe for cursor or selection?\r\n\r\n**Update:**\r\n-Underline\r\n-Render rect behind text ( a la what @kylemcdonald added to ofDrawBitmapString)\r\n-Scale type to fit a rect + keep aspect ratio\r\n-Crazy: text along a path :) ","number":1131,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1131","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"DDDDDD","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-typography","name":"section-typography"}],"id":3911537,"closed_at":null,"created_at":"2012-03-31T17:36:25Z"},{"milestone":{"state":"open","description":"","title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"number":5,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","creator":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":61810,"created_at":"2011-12-02T15:29:48Z"},"state":"open","user":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"Define standard header for examples.","html_url":"https://github.com/openframeworks/openFrameworks/issues/1130","comments":0,"assignee":null,"updated_at":"2012-03-31T14:44:01Z","body":"Agree on a common format for a header in the contributed example files.","number":1130,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1130","labels":[{"color":"d1af26","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/example","name":"example"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"cccc29","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/documentation","name":"documentation"},{"color":"37c200","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy"}],"id":3910580,"closed_at":null,"created_at":"2012-03-31T14:44:01Z"},{"milestone":{"state":"open","description":"","title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"number":5,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","creator":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":61810,"created_at":"2011-12-02T15:29:48Z"},"state":"open","user":{"gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","url":"https://api.github.com/users/ofZach","login":"ofZach","id":142897,"avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"xcode 4 issues: scheme, auto-generation of schemes, rebuilding OF, sdk, etc","html_url":"https://github.com/openframeworks/openFrameworks/issues/1129","comments":5,"assignee":{"gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","url":"https://api.github.com/users/ofTheo","login":"ofTheo","id":144000,"avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2012-04-24T02:12:05Z","body":"\r\n\r\nXcode 4 mangles OF projects pretty badly in the following ways: \r\n\r\na) it autogenerates schemes, and \"openframeworks\" appears as the chosen scheme\r\nb) it sometimes chooses the wrong SDK for OF -- is there a way to set that?\r\nc) debug and release are not really clear, part of this is a shift in xcode -- but it's much harder to see how things are compiled and to set release or debug\r\nd) I still had issues with OF needing to be recompiled all the time.  I tried to fix this, but we should make sure it's done right.  the of lib was appearing red even though it had been built, etc. \r\n\r\nI've tried to fix some of this in detroit with the PG, but I don't think it's the right way to do it.   Overall, it would be great to have projects work smoothly on xcode 4...\r\n","number":1129,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1129","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"993e7a","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/xcode","name":"xcode"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"444444","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator"}],"id":3910555,"closed_at":null,"created_at":"2012-03-31T14:39:04Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"bea30676dca310e7f38269f245214944","url":"https://api.github.com/users/elliotwoods","login":"elliotwoods","id":328294,"avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"upgrade scripts","html_url":"https://github.com/openframeworks/openFrameworks/issues/1128","comments":1,"assignee":null,"updated_at":"2012-03-31T16:32:04Z","body":"When deprecating api's (e.g. ofEvents, ofVertexes), perhaps we could help automate the changes through simple scripts to update api\r\nSuggest sticking to something close to how uncrustify scripts are run (and perhaps there are tools like uncrustify but specifically for this task)","number":1128,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1128","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"37c200","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy"},{"color":"DDDDDD","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals"}],"id":3910549,"closed_at":null,"created_at":"2012-03-31T14:38:19Z"},{"milestone":{"state":"open","description":"","title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"number":5,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","creator":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":61810,"created_at":"2011-12-02T15:29:48Z"},"state":"open","user":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"PG Feature request: Clean examples folder","html_url":"https://github.com/openframeworks/openFrameworks/issues/1126","comments":0,"assignee":null,"updated_at":"2012-04-09T16:47:04Z","body":"It would be nice (and useful for testing the PG) if the PG would get an option to clean the examples folders of all generated files. \r\n\r\nCurrently, the quickest option is to delete the examples folder on disk, and do `git reset --hard HEAD`.\r\n\r\nAs before, milestoned for 0071, but feel free to push back.","number":1126,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1126","labels":[{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"444444","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator"}],"id":3897090,"closed_at":null,"created_at":"2012-03-30T12:51:30Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"5008d5295e9bc2636313c7b50ed5981d","url":"https://api.github.com/users/jesusgollonet","login":"jesusgollonet","id":31100,"avatar_url":"https://secure.gravatar.com/avatar/5008d5295e9bc2636313c7b50ed5981d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"void dragEvent(ofDragInfo dragInfo) limited to 100 files in osx lion","html_url":"https://github.com/openframeworks/openFrameworks/issues/1124","comments":0,"assignee":null,"updated_at":"2012-03-29T16:47:29Z","body":"there is a hard limit of 100 files when using drag & drop into an of app. not sure if it's an of issue, but am curious if it comes from the hacked glutDragEventFunc ","number":1124,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1124","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"DDDDDD","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals"}],"id":3883598,"closed_at":null,"created_at":"2012-03-29T16:47:29Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"7398ab0bbd07832d0289f26773e65077","url":"https://api.github.com/users/imanhp","login":"imanhp","id":1216228,"avatar_url":"https://secure.gravatar.com/avatar/7398ab0bbd07832d0289f26773e65077?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"isFileChanged() for ofImage, ofVideoPlayer, ofSoundPlayer and ofFile","html_url":"https://github.com/openframeworks/openFrameworks/issues/1120","comments":2,"assignee":null,"updated_at":"2012-03-29T13:05:25Z","body":"When loading a file with ofImage, ofSoundPlayer , ofVideoPlayer-file or any ofFile it would be nice to be able to know if the file changed since it was loaded.\r\n\r\nIts very simple to implement with Poco::File->getLastModified() and it would be very nice if this would be built into the above classes.","number":1120,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1120","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"}],"id":3856005,"closed_at":null,"created_at":"2012-03-28T16:21:45Z"},{"milestone":{"state":"open","description":"","title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"number":5,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","creator":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":61810,"created_at":"2011-12-02T15:29:48Z"},"state":"open","user":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"Default paths.make for Android","html_url":"https://github.com/openframeworks/openFrameworks/issues/1118","comments":0,"assignee":{"gravatar_id":"84c985e7168027f833fd837f3afd9f3e","url":"https://api.github.com/users/arturoc","login":"arturoc","id":48240,"avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2012-03-30T12:19:59Z","body":"paths.make should be in the repo as an example on how to set it up correctly, but changes (i.e. paths unique to every user) to it should be ignored cause everyone will have a different version in their computers so we don't want personal changes to appear in git status.\r\n\r\nI think the best way to solve this is to rename it to paths.make.default, keep this in the repo, maybe with `<your-path-here>` instead of your path, and have people make their own paths.make from that one. We track changes to paths.make.default and ignore paths.make. \r\n\r\nThis will probably also need a mechanism in the makefile to fail gracefully and remind the user, if his customized paths.make is missing.","number":1118,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1118","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"2bc4ad","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/android","name":"android"}],"id":3850655,"closed_at":null,"created_at":"2012-03-28T12:19:39Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"b87a82d7c86161432ee6388c7cbd5e2c","url":"https://api.github.com/users/armadillu","login":"armadillu","id":167057,"avatar_url":"https://secure.gravatar.com/avatar/b87a82d7c86161432ee6388c7cbd5e2c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"Can't retrieve desired frame rate once set","html_url":"https://github.com/openframeworks/openFrameworks/issues/1117","comments":0,"assignee":null,"updated_at":"2012-04-18T17:13:36Z","body":"Once ofSetFrameRate() is called, I can't find a way to retrieve it. I think implementing a ofGetDesiredFrameRate() in ofAppRunner would make sense, also adding getDesiredFrameRate() to ofAppBaseWindow and all subclasses, where the actual value is stored.  \r\n\r\nThis can be useful to compare the desired frame rate with actual frame rate and react accordingly if required.","number":1117,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1117","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"}],"id":3825582,"closed_at":null,"created_at":"2012-03-27T11:48:00Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"37aca214d4875cd90af9d67072c82642","url":"https://api.github.com/users/vade","login":"vade","id":65011,"avatar_url":"https://secure.gravatar.com/avatar/37aca214d4875cd90af9d67072c82642?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofVBO updateIndexData incorrect buffer type.","html_url":"https://github.com/openframeworks/openFrameworks/issues/1116","comments":5,"assignee":null,"updated_at":"2012-03-26T22:27:14Z","body":"https://github.com/openframeworks/openFrameworks/blob/master/libs/openFrameworks/gl/ofVbo.cpp#L343\r\n\r\nIndices should be specified as GL_ELEMENT_ARRAY_BUFFER unless I am mistaken.","number":1116,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1116","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"31e03a","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed"},{"color":"DDDDDD","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D"}],"id":3813852,"closed_at":null,"created_at":"2012-03-26T18:26:05Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"2548dbd6a86902ed5260b5f76710b83c","url":"https://api.github.com/users/colormotor","login":"colormotor","id":1239872,"avatar_url":"https://secure.gravatar.com/avatar/2548dbd6a86902ed5260b5f76710b83c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"optimization level in xcode projects","html_url":"https://github.com/openframeworks/openFrameworks/issues/1115","comments":3,"assignee":null,"updated_at":"2012-03-26T18:45:51Z","body":"The default optimization settings for debug builds in example XCode projects is set to Fastest,Smallest thus making debugging very difficult, is there a specific reason for this?","number":1115,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1115","labels":[{"color":"993e7a","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/xcode","name":"xcode"}],"id":3812318,"closed_at":null,"created_at":"2012-03-26T17:05:14Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"2548dbd6a86902ed5260b5f76710b83c","url":"https://api.github.com/users/colormotor","login":"colormotor","id":1239872,"avatar_url":"https://secure.gravatar.com/avatar/2548dbd6a86902ed5260b5f76710b83c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"macros in ofArduino","html_url":"https://github.com/openframeworks/openFrameworks/issues/1114","comments":1,"assignee":{"gravatar_id":"10960ba0f305803a1cdc7cd6188d643b","url":"https://api.github.com/users/joshuajnoble","login":"joshuajnoble","id":237423,"avatar_url":"https://secure.gravatar.com/avatar/10960ba0f305803a1cdc7cd6188d643b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2012-03-31T15:31:31Z","body":"I had some problems because of macro definitions in ofArduino.h overriding an enum in a a class of my codebase ( SHIFT )\r\nIt's not exactly a bug! but I would suggest using enums or const int instead of the macros to avoid any conflicts\r\nI solved the problem by modifying \r\n#define SHIFT 0x05 \r\ninto \r\nconst int SHIFT = 0x05;\r\n\r\nanother solution could be using enumerations as \r\nenum\r\n{\r\n  ...\r\n  SHIFT = 0x05,\r\n  etc...\r\n};\r\n\r\nI believe this would not break any of the existing code\r\n","number":1114,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1114","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"}],"id":3812275,"closed_at":null,"created_at":"2012-03-26T17:02:21Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"aa6e2a475cab75513c9cc435b28eef31","url":"https://api.github.com/users/OlexandrStepanov","login":"OlexandrStepanov","id":971079,"avatar_url":"https://secure.gravatar.com/avatar/aa6e2a475cab75513c9cc435b28eef31?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"Issue with QtKitMovieGrabberExample in apps/devapps","html_url":"https://github.com/openframeworks/openFrameworks/issues/1112","comments":9,"assignee":null,"updated_at":"2012-03-27T14:56:56Z","body":"Hello.\r\n\r\nI'm trying to run camera frame grabing in OSX Lion.\r\nSimple ofVideoGrabber doesn't work - even if I link it with 10.6 SDK (and 10.6 is deployment target) I receive crash in initialization of ofVideoGrabber. Details are the same as in http://forum.openframeworks.cc/index.php/topic,6776.0.html\r\n\r\nI tryed QtKitMovieGrabberExample. It had some problems in compilation - texture property was not synthesized, I wrote this property and compilation run well.\r\nBut linking is fault. All I receive form linker is:\r\n\r\n*Ld bin/movieGrabberExampleDebug.app/Contents/MacOS/movieGrabberExampleDebug normal i386\r\n    cd /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample\r\n    setenv MACOSX_DEPLOYMENT_TARGET 10.6\r\n    /Developer/usr/bin/clang++ -arch i386 -isysroot /Developer/SDKs/MacOSX10.6.sdk -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/bin -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/freeimage/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/FreeImage/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/GLee/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/poco/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/rtAudio/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/fmodex/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/freetype/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/FreeImage/lib/osx -F/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/bin -F/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/glut/lib/osx -filelist /Users/yltastep/Library/Developer/Xcode/DerivedData/movieGrabberExample-aftkspwrgtotrteyzaplfbqzeasd/Build/Intermediates/movieGrabberExample.build/Debug/movieGrabberExample.build/Objects-normal/i386/movieGrabberExampleDebug.LinkFileList -mmacosx-version-min=10.6 -dead_strip ../../../libs/poco/lib/osx/PocoFoundation.a ../../../libs/poco/lib/osx/PocoNet.a ../../../libs/poco/lib/osx/PocoXML.a ../../../libs/poco/lib/osx/PocoUtil.a ../../../libs/tess2/lib/osx/tess2.a ../../../libs/glew/lib/osx/glew.a ../../../libs/cairo/lib/osx/cairo-script-interpreter.a ../../../libs/cairo/lib/osx/cairo.a ../../../libs/cairo/lib/osx/pixman-1.a ../../../libs/fmodex/lib/osx/libfmodex.dylib ../../../libs/rtAudio/lib/osx/rtAudio.a /Users/yltastep/Documents/XCode/openframeworks/libs/openFrameworksCompiled/lib/osx/openFrameworksDebug.a /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/GLee/lib/osx/GLee.a /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/rtAudio/lib/osx/rtAudio.a -framework AGL -framework ApplicationServices -framework AudioToolbox -framework Carbon -framework CoreAudio -framework CoreFoundation -framework CoreServices -framework OpenGL -framework QuickTime -framework AppKit -framework Cocoa -framework IOKit -framework GLUT /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/poco/lib/osx/PocoFoundation.a /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/poco/lib/osx/PocoNet.a /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/poco/lib/osx/PocoUtil.a /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/poco/lib/osx/PocoXML.a /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/freetype/lib/osx/freetype.a -lfmodex /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/FreeImage/lib/osx/freeimage.a -framework QTKit -framework Quartz -framework QuartzCore -o /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/bin/movieGrabberExampleDebug.app/Contents/MacOS/movieGrabberExampleDebug*\r\n\r\n**Command /Developer/usr/bin/clang++ failed with exit code 1**\r\n\r\nSo no explanation of problem.\r\n\r\nIs somebody ran this example successfully ?\r\nAnd what I'm doing wrong ?\r\n\r\nThanks in advance !\r\n\r\nWith regards.","number":1112,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1112","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"2a8296","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS"}],"id":3807459,"closed_at":null,"created_at":"2012-03-26T12:11:44Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","url":"https://api.github.com/users/ofZach","login":"ofZach","id":142897,"avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"add a simple regex function like ofSplitString()","html_url":"https://github.com/openframeworks/openFrameworks/issues/1110","comments":1,"assignee":null,"updated_at":"2012-03-25T20:07:16Z","body":"Todd's example has this code a few times in it by hand, but I'm thinking it's so simple it could be added along side ofSplitString() and would be really useful ?    for sure, more string utility functions are helpful, and for basic text parsing, this is great.  Poco gives us this for free, so it doesn't seem like a huge stretch to think of something like this, plus find and replace, etc.    Would make the regex example much shorter. \r\n\r\np5 has something similar, if that's a helpful argument: \r\n\r\nhttp://processing.org/reference/matchAll_.html\r\n\r\n\r\n\tvector < string > ofxRegex::getMatchedStrings (string contents, string regex );\r\n\tvector < string > ofxRegex::getMatchedStrings (string contents, string regex ){\r\n    \r\n\t    vector < string > results;\r\n\t    RegularExpression regEx(regex);\r\n\t    RegularExpression::Match match;\r\n    \r\n\t    while(regEx.match(contents, match) != 0) {\r\n        \r\n\t        // we get the sub string from the content\r\n\t        // and then trim the content so that we\r\n\t        // can continue to search \r\n\t        string foundStr = contents.substr(match.offset, match.length);\r\n\t        contents = contents.substr(match.offset + match.length);\r\n        \r\n\t        results.push_back(foundStr);\r\n        \r\n\t    }\r\n\t    return results;\r\n\t}","number":1110,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1110","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"31e03a","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed"}],"id":3799872,"closed_at":null,"created_at":"2012-03-25T18:56:37Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","url":"https://api.github.com/users/ofZach","login":"ofZach","id":142897,"avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"mac paths don't seem right until you call \"ofToDataPath()\"","html_url":"https://github.com/openframeworks/openFrameworks/issues/1109","comments":3,"assignee":null,"updated_at":"2012-03-25T18:50:13Z","body":"code to recreate: \r\n\r\n//--------------------------------------------------------------\r\nvoid testApp::setup(){\r\n    system(\"pwd;\");\r\n}\r\n\r\n//--------------------------------------------------------------\r\nvoid testApp::update(){\r\n     system(\"pwd;\");\r\n}\r\n\r\n//--------------------------------------------------------------\r\nvoid testApp::draw(){\r\n}\r\n\r\n//--------------------------------------------------------------\r\nvoid testApp::keyPressed(int key){\r\n    cout << ofToDataPath(\"temp\") << endl;\r\n}\r\n\r\nproduces: \r\n\r\n/Users/zach/Desktop/openFrameworks__GIT/_myApps/test/emptyExample/bin\r\n/Users/zach/Desktop/openFrameworks__GIT/_myApps/test/emptyExample/bin\r\n/Users/zach/Desktop/openFrameworks__GIT/_myApps/test/emptyExample/bin\r\n/Users/zach/Desktop/openFrameworks__GIT/_myApps/test/emptyExample/bin\r\n../../../data/temp\r\n/Users/zach/Desktop/openFrameworks__GIT/_myApps/test/emptyExample/bin/emptyExampleDebug.app/Contents/MacOS\r\n/Users/zach/Desktop/openFrameworks__GIT/_myApps/test/emptyExample/bin/emptyExampleDebug.app/Contents/MacOS\r\n\r\nthis is because the code that fixes OSX paths isn't called until you call ofToDataPath().  a good fix I think would be to set ofDataPathRoot (which happens in ofToDataPath) somewhere early in ofRunApp().   Or should it happen even earlier?","number":1109,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1109","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"993e7a","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/xcode","name":"xcode"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"65a300","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize"},{"color":"2a8296","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS"}],"id":3799653,"closed_at":null,"created_at":"2012-03-25T18:18:28Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"fe632ca3d0c42747cfef88a95d942c4a","url":"https://api.github.com/users/roymacdonald","login":"roymacdonald","id":974878,"avatar_url":"https://secure.gravatar.com/avatar/fe632ca3d0c42747cfef88a95d942c4a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"easyCam weird behavior when target changed","html_url":"https://github.com/openframeworks/openFrameworks/issues/1108","comments":7,"assignee":{"gravatar_id":"bea30676dca310e7f38269f245214944","url":"https://api.github.com/users/elliotwoods","login":"elliotwoods","id":328294,"avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2012-04-09T13:06:18Z","body":"easycam behaves as expected when inited but as soon as I change it's target it begins to behave strangely.\r\nthere's this imaginary sphere that we are rotating (it's diameter is min (viewport.width, vieport.height)), when the mouse is dragged from inside to outside of it the rotation just jumps to a \"random\" rotation. \r\nas well when you have a the camera rotated more than 180º in some axis the \"trackball\" doesn't behave as expected. yet this behavior is not seen when the target hasn't been changed.\r\n\r\nDoes any one know what's going on?\r\n\r\nI just came across this but I haven't gone deeply into how easycam handles the mouse to rotate. \r\nI'll do so ASAP. If someone can give me any clues I'll really apreciate it.\r\n\r\nregards!","number":1108,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1108","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"DDDDDD","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D"}],"id":3795495,"closed_at":null,"created_at":"2012-03-25T00:01:54Z"},{"milestone":{"state":"open","description":"","title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"number":5,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","creator":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":61810,"created_at":"2011-12-02T15:29:48Z"},"state":"open","user":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"PG feature request: Generate makefile-only projects","html_url":"https://github.com/openframeworks/openFrameworks/issues/1103","comments":1,"assignee":null,"updated_at":"2012-04-09T16:47:18Z","body":"It would be great if the PG could also generate projects/examples for usage with Eclipse, i.e. just the makefile related files, no CB or other project files.","number":1103,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1103","labels":[{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"444444","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator"}],"id":3754055,"closed_at":null,"created_at":"2012-03-21T21:43:34Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"bea30676dca310e7f38269f245214944","url":"https://api.github.com/users/elliotwoods","login":"elliotwoods","id":328294,"avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"feature / bug - #pragma omp critical(ofLog)","html_url":"https://github.com/openframeworks/openFrameworks/issues/1098","comments":3,"assignee":null,"updated_at":"2012-03-19T16:18:43Z","body":"whenever i call ofLog beneath openmp i have to wrap it in  ```#pragma omp critical (ofLog)``` otherwise i get a crash\r\ni found adding the line above \r\nhttps://github.com/openframeworks/openFrameworks/blob/master/libs/openFrameworks/utils/ofLog.cpp#L84\r\nworks pretty well\r\n\r\nany objections to having it in there?","number":1098,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1098","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"DDDDDD","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals"}],"id":3710293,"closed_at":null,"created_at":"2012-03-19T14:04:51Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"bea30676dca310e7f38269f245214944","url":"https://api.github.com/users/elliotwoods","login":"elliotwoods","id":328294,"avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"bug ofDirectory::open(string path) actually loads the entire dir into memory?","html_url":"https://github.com/openframeworks/openFrameworks/issues/1075","comments":2,"assignee":{"gravatar_id":"bea30676dca310e7f38269f245214944","url":"https://api.github.com/users/elliotwoods","login":"elliotwoods","id":328294,"avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2012-03-15T20:34:17Z","body":"I'm finding that `ofDirector::listDir, open` are extremely slow\r\nit seems that it's actually loading the entire dir contents into memory\r\n\r\nit's possible to then do something like\r\n```\r\nofLoadImage(myPixels, dir.getFile(i));\r\n```\r\nand you can quickly load that image from memory. which is faster than\r\n```\r\nofLoadImage(myPixels, dir.getFile(i).getAbsolutePath());\r\n```\r\n\r\nBut this doesn't seem to work consistently (even though the slow listing is consistent)\r\nand surely isn't what we want.","number":1075,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1075","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"DDDDDD","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals"}],"id":3662214,"closed_at":null,"created_at":"2012-03-15T07:54:55Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"c1ec5161b69b4a990436deafb1170d64","url":"https://api.github.com/users/manuelgeoffray","login":"manuelgeoffray","id":808090,"avatar_url":"https://secure.gravatar.com/avatar/c1ec5161b69b4a990436deafb1170d64?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"Alpha movies in GStreamer","html_url":"https://github.com/openframeworks/openFrameworks/issues/1070","comments":6,"assignee":null,"updated_at":"2012-03-14T16:03:06Z","body":"Hello,\r\nI needed alpha channel in short length video for a recent project.\r\nIn the forum there is some old zip file for a ofxAlphaVideoPlayer that is still working, but that's OS X & windows only as it's based on QT.\r\nI'm working on linux, and I didn't find anything for GStreamer, so I modified the existing ofGstUtils and ofGstVideoPlayer.\r\nWould you mind if I do a pull request for this?\r\nI can also provide an example with a short length video using animation codec.\r\nWhat do you think?","number":1070,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1070","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"}],"id":3647640,"closed_at":null,"created_at":"2012-03-14T13:02:41Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"390ea42c23c2c383f973abdafa24bb07","url":"https://api.github.com/users/gabrielstuff","login":"gabrielstuff","id":285033,"avatar_url":"https://secure.gravatar.com/avatar/390ea42c23c2c383f973abdafa24bb07?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"Continuous integration","html_url":"https://github.com/openframeworks/openFrameworks/issues/1068","comments":10,"assignee":{"gravatar_id":"84c985e7168027f833fd837f3afd9f3e","url":"https://api.github.com/users/arturoc","login":"arturoc","id":48240,"avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2012-03-17T19:26:40Z","body":"Hey !\r\n\r\nMe again. Didn't find anywhere this infos. I'm currently testing the travis-ci.org service.\r\nAs many people are working on the project and as many many issue are raised, and fixed, I thought it could be great to add some test and thus the travis service.\r\n\r\nIt would avoid the problem met here :\r\nhttps://github.com/openframeworks/openFrameworks/commit/7ca7833ea1afb6bd5a6c54031e3fa688aa0c0ba8\r\nand the discussion here :\r\nhttps://github.com/openframeworks/openFrameworks/issues/804\r\nor there :\r\nhttps://github.com/openframeworks/openFrameworks/pull/921\r\n\r\nI read that :\r\n\r\n>feel free to make a unitTests folder at the root level of OF -\r\n> that is where all unitTests will go.\r\n\r\nBut didn't find them.\r\n\r\nThe travis service will permit to get the little badge we know well : \r\n[![Build Status](https://secure.travis-ci.org/soixantecircuits/openFrameworks.png?branch=master)](http://travis-ci.org/soixantecircuits/openFrameworks)\r\n\r\nAlso, why not adding some spec test, to ensure future development of features.\r\nI'm currently reading :\r\nhttp://www.squidoo.com/cplusplus-behaviour-driven-development-tools#module124841511\r\nhttp://sourceforge.net/apps/mediawiki/turtle/index.php?title=Turtle\r\n\r\nFor those who want some other nice reading :\r\n\r\nhttp://gamesfromwithin.com/exploring-the-c-unit-testing-framework-jungle\r\n\r\nThe travis test is here, currently it is a total fake, but I just proposed the idea of a test driven development\r\nhttp://travis-ci.org/#!/soixantecircuits/openFrameworks/builds/854259 ","number":1068,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1068","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"37c200","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy"}],"id":3631618,"closed_at":null,"created_at":"2012-03-13T15:49:23Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"390ea42c23c2c383f973abdafa24bb07","url":"https://api.github.com/users/gabrielstuff","login":"gabrielstuff","id":285033,"avatar_url":"https://secure.gravatar.com/avatar/390ea42c23c2c383f973abdafa24bb07?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"Automatic installer + dependencies handler","html_url":"https://github.com/openframeworks/openFrameworks/issues/1063","comments":7,"assignee":null,"updated_at":"2012-03-13T15:21:30Z","body":"Hi !\r\n\r\nRecently, I've been in lot of languages, from C++ to ruby, passing by the colosus of javascript and the sea of php. Dropping by various and strange framework such as the Cinder, the jQuery, the Rails, the Processing, etc ...\r\n\r\n## the situation \r\n\r\nWhat I have noticed is that a strong architecture and a really ease use of add-ons makes a framework get stronger. For instance, if we take a look at Ruby, we see that the use of gems give him a powerfull advance over his friend php. \r\n\r\n### the Rubyist\r\n\r\nThis way of thinking is getting even better with the http://gembundler.com/ [Bundler](http://gembundler.com/) friend. The gems have dependencies and a simple GemFile help to easily install all dependencies for one project.\r\n\r\n### the Cinderist\r\n\r\nFor Cinder, we get the block, as for OSX, it quiet easy and fast. Drag and drop and play/code.\r\n\r\n### the jQueryist\r\n\r\nWell, it is not frequent to have jQuery plugins depending on other jQuery plugins, but there are several way to handle dependencies on jQuery and JS.\r\n\r\n### the nodist\r\n\r\nThis lead us to http://npmjs.org/, which is really nice with dependencies.\r\nFor instance, if you tried cloud9ide, you know that you just have to make sure you get the proper package.json :\r\n\r\n```\r\n{\r\n  \"name\": \"node-example\",\r\n  \"version\": \"0.0.1\",\r\n  \"dependencies\": {\r\n    \"express\": \"2.2.0\"\r\n  }\r\n}\r\n```\r\n\r\nThis file ensure that everything before running the server will be installed via npm.\r\n\r\n### the ofist\r\n\r\nRight now, we just have the addons.make file, which is nice but does not do any lifting for us. We have to verify that the ofx addons has been downloaded and is installed in the right folder.\r\n\r\n- Why not creating a script that will allow to manage dependencies compilation ? \r\nI have this wonderful ofxJSONsettings, but he depends on [JSONCPP](http://jsoncpp.sourceforge.net/) and on boost, so here we will have :\r\n\r\npackage.json file in the ofxJSONsettings folder :\r\n\r\n```\r\n{\r\n  \"name\": \"ofxJSONsettings\",\r\n  \"version\": \"0.0.1\",\r\n  \"dependencies\": [{\r\n    \"jsoncpp\": \"0.6.0-rc2\"\r\n    \"url\":\"http://jsoncpp.svn.sourceforge.net/svnroot/jsoncpp/trunk/\"\r\n    \"protocol\":\"svn\"\r\n     }\r\n  ]\r\n}\r\n```\r\n\r\nHum, then, we have our little bash script :\r\n\r\n`xadd -addon ofxJSONsettings`\r\n\r\nand for a project, we have to ensure that the make file run `xadd -addon ofxJSONsettings` if it does not find ofXJSONsettings.\r\n\r\nThis could lead to simplify and easify the use of plugin ! Hey, I want the new [mistubaRenderer](https://github.com/satoruhiga/ofxMitsubaRenderer) let's give a try :\r\n\r\n```\r\n{\r\n  \"name\": \"ofxMitsubaRenderer\",\r\n  \"version\": \"0.0.1\",\r\n  \"dependencies\": [{\r\n    \"mitsuba\": \"0.1\"\r\n    \"url\":\"https://www.mitsuba-renderer.org/hg/mitsuba-bidir\"\r\n    \"protocol\":\"hg\"\r\n     }\r\n  ]\r\n}\r\n```\r\n\r\nWell, this would be simplify if everybody use some same pattern, and respect some convention.\r\n\r\nSo what do you guys think about that ?\r\n\r\n\r\nThank you !\r\n\r\n\r\n","number":1063,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1063","labels":[{"color":"d68e22","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"37c200","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy"}],"id":3627067,"closed_at":null,"created_at":"2012-03-13T10:44:57Z"},{"milestone":{"state":"open","description":"","title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"number":5,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","creator":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":61810,"created_at":"2011-12-02T15:29:48Z"},"state":"open","user":{"gravatar_id":"e5d92e48e175112e9df112e2418bd528","url":"https://api.github.com/users/kylemcdonald","login":"kylemcdonald","id":157106,"avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"regularize code for math addons","html_url":"https://github.com/openframeworks/openFrameworks/issues/1062","comments":4,"assignee":null,"updated_at":"2012-03-12T17:58:20Z","body":"right now there is a lot of duplicated code in the vector math classes. for example, normalize() and getNormalized() have separate implementations. if we follow the pattern of always implementing things in self-modifying methods, then providing copy-returning methods as alternatives, this will reduce the amount of code and make it harder to cause bugs or behavioral discrepancies.\r\n\r\n- implementations of an algorithm should always be self-modifying\r\n- copy-returning versions should be implemented using a differently named method, internally making a copy and calling the self-modifying version on the copy.\r\n\r\ne.g. something like (note, this isn't how it's implemented right now):\r\n\r\n\tinline ofVec2f& ofVec2f::normalize() {\r\n\t\tfloat length = (float)sqrt(x*x + y*y);\r\n\t\tif( length > 0 ) {\r\n\t\t\tx /= length;\r\n\t\t\ty /= length;\r\n\t\t}\r\n\t\treturn *this;\r\n\t}\r\n\r\n\tinline ofVec2f ofVec2f::getNormalized() const {\r\n\t\tofVec2f result = *this;\r\n\t\treturn result.normalize();\r\n\t}\r\n\r\ntaken from this post https://github.com/openframeworks/openFrameworks/pull/1061#issuecomment-4455601","number":1062,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1062","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"37c200","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy"}],"id":3614231,"closed_at":null,"created_at":"2012-03-12T16:33:06Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"bea30676dca310e7f38269f245214944","url":"https://api.github.com/users/elliotwoods","login":"elliotwoods","id":328294,"avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofVertexes?? ofCurveVertexes","html_url":"https://github.com/openframeworks/openFrameworks/issues/1055","comments":18,"assignee":null,"updated_at":"2012-03-13T13:07:11Z","body":"Just saw this is the documentation.\r\nVertexes is incorrect (wrong plural)\r\nVertices","number":1055,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1055","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"31e03a","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed"}],"id":3605277,"closed_at":null,"created_at":"2012-03-12T01:50:19Z"}]

